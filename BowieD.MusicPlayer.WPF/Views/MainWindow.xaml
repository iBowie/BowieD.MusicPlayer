<mah:MetroWindow  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="BowieD.MusicPlayer.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:gong="urn:gong-wpf-dragdrop"
                  xmlns:extensions="clr-namespace:BowieD.MusicPlayer.WPF.Extensions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:models="clr-namespace:BowieD.MusicPlayer.WPF.Models"
        xmlns:local="clr-namespace:BowieD.MusicPlayer.WPF.Views" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:viewmodels="clr-namespace:BowieD.MusicPlayer.WPF.ViewModels"
                  mc:Ignorable="d"
                  d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        Title="{Binding WindowTitle}"
                  d:Title="BDMP - BowieD's Music Player" Height="720" Width="1280" d:Width="2560" d:Background="{DynamicResource MahApps.Brushes.Window.Background}">
    <Grid Name="mainGrid">
        <Grid Name="normalViewGrid" d:HorizontalAlignment="Left" d:Width="1280">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Menu Visibility="Collapsed">
                    <MenuItem Header="File">
                        <MenuItem Header="Add song" Command="{Binding AddSongCommand}"/>
                    </MenuItem>
                </Menu>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="128" MaxWidth="392"/>
                        <ColumnDefinition Width="2"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <Button Margin="5"
                                        HorizontalAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Bookshelf" Margin="5"/>
                                        <TextBlock Grid.Column="1" Text="My library" Margin="5"/>
                                    </Grid>
                                </Button>
                                <Separator/>
                                <Button Margin="5"
                                    HorizontalAlignment="Left"
                                    Style="{DynamicResource ContentOnlyButton}"
                                    Command="{Binding CreatePlaylistCommand}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Plus" Margin="5"/>
                                        <TextBlock Grid.Column="1" Text="Create Playlist" Margin="5"/>
                                    </Grid>
                                </Button>
                            </StackPanel>
                            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
                                <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Playlists}" SelectedItem="{Binding SelectedPlaylist, Mode=TwoWay}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate DataType="{x:Type models:PlaylistInfo}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Image Width="20" Height="20" Margin="5" Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=20|0}"/>
                                                <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </ScrollViewer>
                        </Grid>
                        <Grid Grid.Row="1" HorizontalAlignment="Stretch"
                              Name="imgBigPicture"
                              Margin="0,0,0,0"
                              VerticalAlignment="Bottom"
                              d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}"
                              DataContext="{Binding DataContext, ElementName=musicPlayer}"
                              d:Visibility="Visible"
                              Visibility="{Binding IsBigPicture, Converter={StaticResource boolToVisConverter}}">
                            <Grid.OpacityMask>
                                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop x:Name="bigPictureGradient1" Color="Black" Offset="1"/>
                                    <GradientStop x:Name="bigPictureGradient2" Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.OpacityMask>
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="bigPictureRenderTTransform"/>
                            </Grid.RenderTransform>
                            <Image d:Source="/Resources/Images/missing_texture.jpg"
                                   Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=392|0}"/>
                            <Button 
                                Margin="16" 
                                Background="{DynamicResource MahApps.Brushes.Window.Background}"
                                Padding="5"
                                Opacity="0.75"
                                HorizontalAlignment="Right" VerticalAlignment="Top" 
                                Style="{DynamicResource RoundButton}"
                                Content="{iconPacks:Material Kind=ArrowDown}"
                                Visibility="{Binding IsMouseOver, ElementName=imgBigPicture, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding CollapseBigPictureCommand}"/>
                        </Grid>
                    </Grid>
                    <GridSplitter Grid.Column="1" ShowsPreview="False"/>
                    <Frame Grid.Column="2" Name="navFrame" NavigationUIVisibility="Hidden"
                           Source="Pages/EmptyPage.xaml" JournalOwnership="OwnsJournal"/>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Name="musicPlayer" d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" MinWidth="180"/>
                    <ColumnDefinition Width="4*" MaxWidth="722"/>
                    <ColumnDefinition Width="3*" MinWidth="180"/>
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <!--cover-->
                        <ColumnDefinition/>
                        <!--name and artist-->
                    </Grid.ColumnDefinitions>
                    <Grid.RenderTransform>
                        <TranslateTransform x:Name="smallPictureRenderTranslateTransform" X="0"/>
                    </Grid.RenderTransform>
                    <Grid Margin="17,17,0,17" Grid.Column="0"  Name="imgSmallPicture">
                        <Image Width="75" Height="75" 
                               d:Source="/Resources/Images/missing_texture.jpg"
                               Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=75|0}"/>
                        <Button
                            Margin="8"
                            Background="{DynamicResource MahApps.Brushes.Window.Background}"
                            Padding="2.5"
                            Opacity="0.75"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Top" Style="{DynamicResource RoundButton}"
                            Command="{Binding ShowBigPictureCommand}"
                            Content="{iconPacks:Material Kind=ArrowUp}"
                            Visibility="{Binding IsMouseOver, ElementName=imgSmallPicture, Converter={StaticResource boolToVisConverter}}"/>
                    </Grid>
                    <Grid Grid.Column="1" Margin="17">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding CurrentSong.Title}" d:Text="His World" Margin="3.5" VerticalAlignment="Bottom" FontSize="14" FontWeight="Bold"/>
                        <TextBlock Grid.Row="1" Text="{Binding CurrentSong.Artist}" d:Text="Ali Tabatabaee Matty Lewis from Zebrahead" Margin="3.5" VerticalAlignment="Top" FontSize="11"/>
                    </Grid>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="0,15,0,22" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Margin="3.5" Content="{iconPacks:Material Kind=Shuffle}" Style="{DynamicResource ContentOnlyButton}"
                            Command="{Binding ShuffleCommand}"/>
                        <Button Grid.Column="2" Margin="3.5" Content="{iconPacks:Material Kind=SkipPrevious}" Style="{DynamicResource ContentOnlyButton}"
                            Command="{Binding PrevTrackCommand}"/>
                        <Button Grid.Column="3" Margin="3.5" Content="{iconPacks:Material Kind=Play}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"/>
                        <Button Grid.Column="3" Margin="3.5" Content="{iconPacks:Material Kind=Pause}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource boolToVisConverter}}"/>
                        <Button Grid.Column="4" Margin="3.5" Content="{iconPacks:Material Kind=SkipNext}" Style="{DynamicResource ContentOnlyButton}"
                            Command="{Binding NextTrackCommand}"/>
                        <Button Grid.Column="5" Margin="3.5" Content="{iconPacks:Material Kind=Repeat}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopNoneVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                        <Button Grid.Column="5" Margin="3.5" Content="{iconPacks:Material Kind=RepeatOnce}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopCurrentVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                        <Button Grid.Column="5" Margin="3.5" Content="{iconPacks:Material Kind=Repeat}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopQueueVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Margin="5" Text="{Binding Position, Converter={StaticResource doubleToDisplayTimeConverter}}" d:Text="00:00" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Margin="3.5" MinWidth="212"
                            Minimum="0"
                            Value="{Binding Position}"
                            Maximum="{Binding Duration}"/>
                        <TextBlock Grid.Column="2" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" d:Text="59:59:59" Text="{Binding Duration, Converter={StaticResource doubleToDisplayTimeConverter}}"/>
                    </Grid>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="17" VerticalAlignment="Center" Grid.Column="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Name="queueViewButton"
                            Command="{Binding ViewQueueCommand}"
                            CommandParameter="{Binding ElementName=queuePopup}"
                            Margin="5" Content="{iconPacks:Material Kind=ViewList}" Style="{DynamicResource ContentOnlyButton}"/>
                        <Popup Name="queuePopup" MaxHeight="240" Width="400" 
                               PlacementTarget="{Binding ElementName=queueViewButton}" Placement="Top">
                            <GroupBox Header="Song Queue" Background="{DynamicResource MahApps.Brushes.Window.Background}">
                                <ScrollViewer>
                                    <StackPanel>
                                        <TextBlock Text="Now Playing"/>
                                        <ContentControl Content="{Binding CurrentSong}" ContentTemplate="{DynamicResource queueSongTemplate}"/>
                                        
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="Up Next from your Queue" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                       />
                                            <Button Grid.Column="1" Content="Clear Queue" HorizontalAlignment="Right"
                                                    Command="{Binding ClearUserQueueCommand}"/>
                                        </Grid>
                                        <ListView ItemsSource="{Binding UserSongQueue}"
                                                  MinHeight="30"
                                                  ItemTemplate="{DynamicResource queueSongTemplate}"
                                                  PreviewMouseWheel="ListView_PreviewMouseWheel"
                                                  gong:DragDrop.IsDropTarget="True"
                                                  gong:DragDrop.IsDragSource="True"/>
                                        
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="Up Next from "/>
                                            <TextBlock FontWeight="DemiBold" Text="" Grid.Column="1"/>
                                        </Grid>
                                        <ListView ItemsSource="{Binding SongQueue}"
                                                  MinHeight="30"
                                                  ItemTemplate="{DynamicResource queueSongTemplate}"
                                                  PreviewMouseWheel="ListView_PreviewMouseWheel"
                                                  gong:DragDrop.IsDropTarget="True"
                                                  gong:DragDrop.IsDragSource="True"/>
                                    </StackPanel>
                                </ScrollViewer>
                                <GroupBox.Resources>
                                    <DataTemplate x:Key="queueSongTemplate" DataType="{x:Type models:Song}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="30"/>
                                                <ColumnDefinition Width="3*"/>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Image Width="20" Height="20" Margin="5" Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}}"/>
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="5" Text="{Binding Title}"/>
                                            <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="5" Text="{Binding Artist}"/>
                                            <TextBlock Grid.Column="3" VerticalAlignment="Center" Margin="5" Text="{Binding Duration, Converter={StaticResource doubleToDisplayTimeConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </GroupBox.Resources>
                            </GroupBox>
                        </Popup>
                        <iconPacks:PackIconMaterial Kind="VolumeSource" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Margin="5" Grid.Column="1"/>
                        <Slider Grid.Column="2" Minimum="0" Maximum="100" TickFrequency="1" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0" IsSnapToTickEnabled="True"
                        Value="{Binding Volume}"/>
                        <Button Command="{Binding EnterFullScreenCommand}"
                                Content="{iconPacks:Material Kind=Fullscreen}"
                                Margin="5"
                                Grid.Column="3"
                                Style="{DynamicResource ContentOnlyButton}"/>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid Name="fullScreenViewGrid" d:HorizontalAlignment="Left" d:Width="1280" d:Visibility="Visible" Visibility="Collapsed"
              AllowDrop="True" Drop="fullScreenViewGrid_Drop">
            <d:Grid.RenderTransform>
                <TranslateTransform X="1280"/>
            </d:Grid.RenderTransform>
            <Grid.Background>
                <VisualBrush Viewbox="0.05,0.05,0.9,0.9" ViewboxUnits="RelativeToBoundingBox">
                    <VisualBrush.Visual>
                        <Canvas>
                            <Image Name="fullScreenBackground">
                                <Image.BitmapEffect>
                                    <BlurBitmapEffect Radius="{Binding View.ViewModel.BlurPower}" KernelType="Gaussian"/>
                                </Image.BitmapEffect>
                            </Image>
                            <Image Name="fullScreenBackground2" Opacity="0">
                                <Image.BitmapEffect>
                                    <BlurBitmapEffect Radius="{Binding View.ViewModel.BlurPower}" KernelType="Gaussian"/>
                                </Image.BitmapEffect>
                            </Image>
                        </Canvas>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Grid.Background>
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Select background..." 
                              Command="{Binding SelectFullscreenBackgroundCommand}"/>
                    <Separator/>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Blur Power" IsEnabled="False"/>
                        <Slider Grid.Row="1" Minimum="0" Maximum="50" TickFrequency="1"
                                AutoToolTipPlacement="BottomRight"
                                AutoToolTipPrecision="0"
                                IsSnapToTickEnabled="True" Value="{Binding View.ViewModel.BlurPower}"/>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Switch Background Speed" IsEnabled="False"/>
                        <Slider Grid.Row="1" Minimum="5" Maximum="120" TickFrequency="1"
                                AutoToolTipPlacement="BottomRight"
                                AutoToolTipPrecision="0"
                                IsSnapToTickEnabled="True" Value="{Binding View.ViewModel.BackgroundSwitchSpeedSeconds}"/>
                    </Grid>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!--maybe something more-->
                <RowDefinition/> <!--blank-->
                <RowDefinition Height="Auto"/> <!--media info-->
                <RowDefinition Height="Auto"/> <!--slider and media control-->
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border BorderBrush="{DynamicResource MahApps.Brushes.Border.NonActive}" BorderThickness="1" 
                        Grid.Column="1" HorizontalAlignment="Right" Margin="30" 
                        MaxWidth="512"
                        Visibility="{Binding View.MusicPlayerViewModel.IsUpcomingSongVisible, Converter={StaticResource boolToVisConverter}}"
                        Background="{DynamicResource MahApps.Brushes.Flyout.Background}">
                    <Grid d:DataContext="{d:DesignInstance Type=models:Song}" DataContext="{Binding View.MusicPlayerViewModel.UpcomingSong}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Margin="5" 
                               d:Source="/Resources/Images/missing_texture.jpg"
                               Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=0|96}"/>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Up Next" Margin="10" FontSize="20" VerticalAlignment="Bottom"/>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10" VerticalAlignment="Top">
                                <TextBlock Text="{Binding Title}" d:Text="This Old Routine" FontWeight="Bold" FontSize="24"/>
                                <TextBlock Text=" - " FontWeight="Bold" FontSize="24"/>
                                <TextBlock Text="{Binding Artist}" d:Text="First Aid Kit" FontWeight="Bold" FontSize="24"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
            <Grid Grid.Row="2" Margin="30" DataContext="{Binding View.MusicPlayerViewModel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Image Margin="10" d:Width="176" d:Height="176" MaxWidth="176" MaxHeight="176"
                           d:Source="/Resources/Images/missing_texture.jpg"
                           Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=176|0}"/>
                    <Grid Margin="10" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding CurrentSong.Title}" TextWrapping="Wrap" VerticalAlignment="Bottom" d:Text="Your Contract Has Expired" FontSize="48" FontWeight="Bold"/>
                        <TextBlock Grid.Row="1" VerticalAlignment="Top" Text="{Binding CurrentSong.Artist}" d:Text="Pascal Michael Stiefel" FontSize="24"/>
                    </Grid>

                    <Grid.BitmapEffect>
                        <DropShadowBitmapEffect Color="Black" ShadowDepth="5" Softness="0.75"/>
                    </Grid.BitmapEffect>
                </Grid>
            </Grid>
            <Grid Grid.Row="3" Name="fullScreenMediaControlGrid"
                  Background="Transparent"
                  d:Opacity="1"
                  Opacity="{Binding IsMouseOver, ElementName=fullScreenMediaControlGrid, Converter={StaticResource boolToVisHiddenConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Margin="30,30,30,15" DataContext="{Binding View.MusicPlayerViewModel}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" d:Text="00:00" Text="{Binding Position, Converter={StaticResource doubleToDisplayTimeConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Slider Grid.Column="1" Value="{Binding Position}" Maximum="{Binding Duration}"/>
                    <TextBlock Grid.Column="2" d:Text="59:59:59" Text="{Binding Duration, Converter={StaticResource doubleToDisplayTimeConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
                <Grid Grid.Row="1" Margin="30,0,30,30" DataContext="{Binding View.MusicPlayerViewModel}">
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Content="{iconPacks:Material Kind=Shuffle}" 
                            Margin="10" Width="30" Height="30" 
                            Command="{Binding ShuffleCommand}"
                            Style="{DynamicResource ContentOnlyButton}"/>
                        <Button Grid.Column="1" Content="{iconPacks:Material Kind=SkipPrevious}" 
                            Margin="10" Width="30" Height="30" 
                            Command="{Binding PrevTrackCommand}"
                            Style="{DynamicResource ContentOnlyButton}"/>
                        <Button Grid.Column="2" Content="{iconPacks:Material Kind=Play}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"
                            Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                            Margin="5" Width="48" Height="48" 
                            Style="{DynamicResource RoundButton}"/>
                        <Button Grid.Column="2" Content="{iconPacks:Material Kind=Pause}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource boolToVisConverter}}"
                            Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                            Margin="5" Width="48" Height="48" 
                            Style="{DynamicResource RoundButton}"/>
                        <Button Grid.Column="3" Content="{iconPacks:Material Kind=SkipNext}" 
                            Margin="10" Width="30" Height="30" 
                            Command="{Binding NextTrackCommand}"
                            Style="{DynamicResource ContentOnlyButton}"/>
                        <Button Grid.Column="4" Margin="10" Content="{iconPacks:Material Kind=Repeat}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopNoneVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                        <Button Grid.Column="4" Margin="10" Content="{iconPacks:Material Kind=RepeatOnce}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopCurrentVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                        <Button Grid.Column="4" Margin="10" Content="{iconPacks:Material Kind=Repeat}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopQueueVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                    </Grid>
                    <Grid HorizontalAlignment="Right">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="VolumeSource" Margin="10" VerticalAlignment="Center" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                            <Slider Value="{Binding Volume}" Maximum="100" Width="128" Margin="10"/>
                            <Button Command="{Binding ExitFullScreenCommand}"
                                Content="{iconPacks:Material Kind=FullscreenExit}"
                                Style="{DynamicResource ContentOnlyButton}" Margin="10"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
    <mah:MetroWindow.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="{Binding View.MusicPlayerViewModel.Position01}"
                         ProgressState="{Binding View.MusicPlayerViewModel.ProgressState}"
                         Overlay="{Binding View.MusicPlayerViewModel.CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=16|0}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PrevTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipPrevious, Brush=White}"
                                 Description="Previous"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Pause, Brush=White}"
                                 Description="Pause"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource boolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Play, Brush=White}"
                                 Description="Play"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.NextTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipNext, Brush=White}"
                                 Description="Next"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </mah:MetroWindow.TaskbarItemInfo>
</mah:MetroWindow>
