<mah:MetroWindow  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="BowieD.MusicPlayer.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
                  xmlns:tb="http://www.hardcodet.net/taskbar"
                  xmlns:gong="urn:gong-wpf-dragdrop"
                  xmlns:extensions="clr-namespace:BowieD.MusicPlayer.WPF.Extensions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:models="clr-namespace:BowieD.MusicPlayer.WPF.Models"
        xmlns:local="clr-namespace:BowieD.MusicPlayer.WPF.Views" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:viewmodels="clr-namespace:BowieD.MusicPlayer.WPF.ViewModels" xmlns:controls="clr-namespace:BowieD.MusicPlayer.WPF.Controls"
                  mc:Ignorable="d"
                  d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
                  Title="{Binding WindowTitle}"
                  MinHeight="600" MinWidth="800"
                  d:Title="BDMP - BowieD's Music Player" Height="720" Width="1280" d:Background="{DynamicResource MahApps.Brushes.Window.Background}">
    <Grid Name="mainGrid">
        <Grid Name="normalViewGrid" d:HorizontalAlignment="Left" d:Width="1280" d:Height="720" d:VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Menu Visibility="Collapsed">
                    <MenuItem Header="File">
                        <MenuItem Header="Add song" Command="{Binding AddSongCommand}" />
                    </MenuItem>
                </Menu>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="128" MaxWidth="392" />
                        <ColumnDefinition Width="2" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <Button Margin="5" Command="{Binding OpenAllSongsCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Music" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="All songs" Margin="5" />
                                    </Grid>
                                </Button>
                                <Button Margin="5" Command="{Binding OpenLibraryCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Bookshelf" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="My library" Margin="5" />
                                    </Grid>
                                </Button>
                                <Button Margin="5" Command="{Binding OpenVisualizerCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Waveform" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="Visualizator" Margin="5" />
                                    </Grid>
                                </Button>
                                <Button Margin="5" Command="{Binding OpenSettingsCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Cog" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="Settings" Margin="5" />
                                    </Grid>
                                </Button>
                                <Separator />
                                <Button Margin="5" Command="{Binding CreatePlaylistCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Plus" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="Create Playlist" Margin="5" />
                                    </Grid>
                                </Button>
                            </StackPanel>
                            <ListView Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Playlists}"
                                      SelectedItem="{Binding SelectedPlaylist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:PlaylistInfo}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Image Width="20" Height="20" Margin="5" Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=20|0}" />
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}"
                                                           TextTrimming="CharacterEllipsis" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                        <Grid Grid.Row="1" HorizontalAlignment="Stretch"
                              Name="imgBigPicture"
                              Margin="0,0,0,0"
                              VerticalAlignment="Bottom"
                              d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}"
                              DataContext="{Binding DataContext, ElementName=musicPlayer}"
                              d:Visibility="Visible"
                              Visibility="{Binding IsBigPicture, Converter={StaticResource boolToVisConverter}}"
                              xf:Animations.Primary="{xf:Animate BasedOn={StaticResource SlideFromBottom}, Event=None}"
                              xf:Animations.PrimaryBinding="{Binding IsBigPicture}">
                            <Grid.BitmapEffect>
                                <DropShadowBitmapEffect Color="Black"
                                                        Opacity="0.5"
                                                        Direction="90"
                                                        Softness="1"
                                                        ShadowDepth="1" />
                            </Grid.BitmapEffect>
                            <Image d:Source="/Resources/Images/missing_texture.jpg"
                                   Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=392|0}" />
                            <Button
                                Margin="16"
                                Background="{DynamicResource MahApps.Brushes.Window.Background}"
                                Padding="5"
                                Opacity="0.75"
                                HorizontalAlignment="Right" VerticalAlignment="Top"
                                Style="{DynamicResource RoundButton}"
                                Content="{iconPacks:Material Kind=ArrowDown}"
                                Visibility="{Binding IsMouseOver, ElementName=imgBigPicture, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding CollapseBigPictureCommand}" />
                        </Grid>
                    </Grid>
                    <GridSplitter Grid.Column="1" ShowsPreview="False" />
                    <Frame Grid.Column="2" Name="navFrame" NavigationUIVisibility="Hidden"
                           Source="Pages/EmptyPage.xaml" JournalOwnership="OwnsJournal" />
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Name="musicPlayer" d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}"
                  Background="{DynamicResource MahApps.Brushes.Gray10}">
                <Grid.BitmapEffect>
                    <DropShadowBitmapEffect Color="Black"
                                            Opacity="0.5"
                                            Direction="90"
                                            Softness="1"
                                            ShadowDepth="1" />
                </Grid.BitmapEffect>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" MinWidth="180" />
                    <ColumnDefinition Width="4*" MaxWidth="722" />
                    <ColumnDefinition Width="3*" MinWidth="180" />
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <!--cover-->
                        <ColumnDefinition />
                        <!--name and artist-->
                    </Grid.ColumnDefinitions>
                    <Grid Margin="17,17,0,17" Grid.Column="0" Name="imgSmallPicture"
                          d:Visibility="Visible"
                          Visibility="{Binding IsBigPicture, Converter={StaticResource invertedBoolToVisConverter}}"
                          xf:Animations.Primary="{xf:Animate BasedOn={StaticResource SlideFromLeft}, Event=None}"
                          xf:Animations.PrimaryBinding="{Binding IsBigPicture, Converter={StaticResource InverseBoolConverter}}">
                        <Image Width="75" Height="75"
                               d:Source="/Resources/Images/missing_texture.jpg"
                               Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=75|0}" />
                        <Button
                            Margin="8"
                            Background="{DynamicResource MahApps.Brushes.Window.Background}"
                            Padding="2.5"
                            Opacity="0.75"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top" Style="{DynamicResource RoundButton}"
                            Command="{Binding ShowBigPictureCommand}"
                            Content="{iconPacks:Material Kind=ArrowUp}"
                            Visibility="{Binding IsMouseOver, ElementName=imgSmallPicture, Converter={StaticResource boolToVisConverter}}" />
                    </Grid>
                    <Grid Grid.Column="1" Margin="17">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding CurrentSong.Title}" d:Text="His World" Margin="3.5" VerticalAlignment="Bottom" FontSize="14" FontWeight="Bold" />
                        <TextBlock Grid.Row="1" Text="{Binding CurrentSong.Artist ,Converter={StaticResource ArtistDisplayConverter}}" d:Text="Ali Tabatabaee Matty Lewis from Zebrahead" Margin="3.5" VerticalAlignment="Top" FontSize="11" />
                    </Grid>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="0,15,0,22" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Margin="10,3.5" Content="{iconPacks:Material Kind=Shuffle}" Style="{DynamicResource ContentOnlyButton}" Foreground="{DynamicResource MahApps.Brushes.AccentBase}"
                                Command="{Binding ShuffleCommand}" Visibility="{Binding IsShuffleEnabled, Converter={StaticResource boolToVisConverter}}" />
                        <Button Grid.Column="1" Margin="10,3.5" Content="{iconPacks:Material Kind=Shuffle}" Style="{DynamicResource ContentOnlyButton}"
                                Command="{Binding ShuffleCommand}" Visibility="{Binding IsShuffleEnabled, Converter={StaticResource invertedBoolToVisConverter}}" />
                        <Button Grid.Column="2" Margin="10,3.5" Content="{iconPacks:Material Kind=SkipPrevious}" Style="{DynamicResource ContentOnlyButton}"
                                Command="{Binding PrevTrackCommand}" />
                        <Button Grid.Column="3" Margin="10,3.5" Content="{iconPacks:Material Kind=Play}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                                Command="{Binding PlayPauseCommand}"
                                Visibility="{Binding IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}" />
                        <Button Grid.Column="3" Margin="10,3.5" Content="{iconPacks:Material Kind=Pause}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                                Command="{Binding PlayPauseCommand}"
                                Visibility="{Binding IsPauseButton, Converter={StaticResource boolToVisConverter}}" />
                        <Button Grid.Column="4" Margin="10,3.5" Content="{iconPacks:Material Kind=SkipNext}" Style="{DynamicResource ContentOnlyButton}"
                                Command="{Binding NextTrackCommand}" />
                        <Button Grid.Column="5" Margin="10,3.5" Content="{iconPacks:Material Kind=Repeat}" Style="{DynamicResource ContentOnlyButton}"
                                Visibility="{Binding LoopNoneVisible, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding LoopCommand}" />
                        <Button Grid.Column="5" Margin="10,3.5" Content="{iconPacks:Material Kind=RepeatOnce}" Foreground="{DynamicResource MahApps.Brushes.AccentBase}" Style="{DynamicResource ContentOnlyButton}"
                                Visibility="{Binding LoopCurrentVisible, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding LoopCommand}" />
                        <Button Grid.Column="5" Margin="10,3.5" Content="{iconPacks:Material Kind=Repeat}" Foreground="{DynamicResource MahApps.Brushes.AccentBase}" Style="{DynamicResource ContentOnlyButton}"
                                Visibility="{Binding LoopQueueVisible, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding LoopCommand}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Margin="5" Text="{Binding BassWrapper.Position, Converter={StaticResource doubleToDisplayTimeConverter}}" d:Text="00:00" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <Slider Grid.Column="1" Margin="3.5" MinWidth="212"
                                Minimum="0"
                                Value="{Binding BassWrapper.Position}"
                                Maximum="{Binding BassWrapper.Duration}" />
                        <TextBlock Grid.Column="2" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" d:Text="59:59:59" Text="{Binding BassWrapper.Duration, Converter={StaticResource doubleToDisplayTimeConverter}}" />
                    </Grid>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="17" VerticalAlignment="Center" Grid.Column="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button Name="queueViewButton"
                                Command="{Binding ViewQueueCommand}"
                                Margin="5" Content="{iconPacks:Material Kind=ViewList}" Style="{DynamicResource ContentOnlyButton}" />
                        <iconPacks:PackIconMaterial Kind="VolumeSource" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Margin="5" Grid.Column="1" />
                        <Slider Grid.Column="2" Minimum="0" Maximum="1" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0"
                                Value="{Binding BassWrapper.UserVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Value="0.5" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <tb:TaskbarIcon ToolTipText="{Binding WindowTitle}" Visibility="Visible" DoubleClickCommand="{Binding ShowWindowCommand}"
                        PopupActivation="RightClick" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                        IconSource="/Resources/Images/missing_texture.ico">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show" Command="{Binding ShowWindowCommand}"/>
                    <MenuItem Header="Hide" Command="{Binding HideWindowCommand}"/>
                    <Separator/>
                    <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
    <mah:MetroWindow.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="{Binding View.MusicPlayerViewModel.Position01}"
                         ProgressState="{Binding View.MusicPlayerViewModel.ProgressState}"
                         Overlay="{Binding View.MusicPlayerViewModel.CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=16|0}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PrevTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipPrevious, Brush=White}"
                                 Description="Previous"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Pause, Brush=White}"
                                 Description="Pause"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource boolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Play, Brush=White}"
                                 Description="Play"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.NextTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipNext, Brush=White}"
                                 Description="Next"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </mah:MetroWindow.TaskbarItemInfo>
</mah:MetroWindow>
