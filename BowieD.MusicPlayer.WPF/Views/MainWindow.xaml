<mah:MetroWindow  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="BowieD.MusicPlayer.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:gong="urn:gong-wpf-dragdrop"
                  xmlns:extensions="clr-namespace:BowieD.MusicPlayer.WPF.Extensions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:models="clr-namespace:BowieD.MusicPlayer.WPF.Models"
        xmlns:local="clr-namespace:BowieD.MusicPlayer.WPF.Views" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:viewmodels="clr-namespace:BowieD.MusicPlayer.WPF.ViewModels"
                  mc:Ignorable="d"
                  d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
        Title="{Binding WindowTitle}"
                  d:Title="BDMP - BowieD's Music Player" Height="720" Width="1280" d:Background="{DynamicResource MahApps.Brushes.Window.Background}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Menu Visibility="Collapsed">
                <MenuItem Header="File">
                    <MenuItem Header="Add song" Command="{Binding AddSongCommand}"/>
                </MenuItem>
            </Menu>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="128" MaxWidth="392"/>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel>
                            <Button Margin="5"
                                    HorizontalAlignment="Left"
                                    Style="{DynamicResource ContentOnlyButton}"
                                    Command="{Binding CreatePlaylistCommand}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <iconPacks:PackIconMaterial Kind="Plus" Margin="5"/>
                                    <TextBlock Grid.Column="1" Text="Create Playlist" Margin="5"/>
                                </Grid>
                            </Button>
                        </StackPanel>
                        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Disabled">
                            <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Playlists}" SelectedItem="{Binding SelectedPlaylist, Mode=TwoWay}">
                                <ListView.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:PlaylistInfo}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Image Width="20" Height="20" Margin="5" Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}}"/>
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </ScrollViewer>
                    </Grid>
                    <Grid Grid.Row="1" HorizontalAlignment="Stretch"
                          d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}"
                          DataContext="{Binding DataContext, ElementName=musicPlayer}"
                           Visibility="{Binding IsBigPicture, Converter={StaticResource boolToVisConverter}}">
                        <Image
                           Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}}"/>
                        <Button Margin="16" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{DynamicResource ContentOnlyButton}"
                            Content="{iconPacks:Material Kind=ArrowDown}"
                                Command="{Binding CollapseBigPictureCommand}"/>
                    </Grid>
                </Grid>
                <GridSplitter Grid.Column="1" ShowsPreview="False"/>
                <Grid Grid.Column="2" Name="playlistScrollViewer"
                              d:DataContext="{d:DesignInstance Type=viewmodels:PlaylistViewModel}"
                              Visibility="{Binding PlaylistInfo.IsEmpty, Converter={StaticResource invertedBoolToVisConverter}}">
                    <ScrollViewer VerticalScrollBarVisibility="Hidden" Name="playlistScrollViewerContent" ScrollChanged="playlistScrollViewerContent_ScrollChanged">
                        <StackPanel VerticalAlignment="Top">
                            <StackPanel.Background>
                                <LinearGradientBrush MappingMode="Absolute" StartPoint="0,0" EndPoint="0,1400">
                                    <GradientStop Color="{DynamicResource MahApps.Colors.AccentBase}" Offset="0"/>
                                    <GradientStop Color="{DynamicResource MahApps.Colors.AccentBase}" Offset="0.2"/>
                                    <GradientStop Color="{DynamicResource MahApps.Colors.ThemeBackground}" Offset="0.25"/>
                                </LinearGradientBrush>
                            </StackPanel.Background>
                            <!--HEADER-->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Width="232" Height="232" Margin="32,32,8,32" Source="{Binding PlaylistInfo.PictureData, Converter={StaticResource binaryToPictureConverter}}"/>
                                <Grid Grid.Column="1" VerticalAlignment="Bottom" Margin="8,32,32,32">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" VerticalAlignment="Bottom" Margin="3.5" Text="PLAYLIST"/>
                                    <TextBlock Grid.Row="1" FontWeight="Bold" Text="{Binding PlaylistInfo.Name}" FontSize="36" VerticalAlignment="Center" Margin="3.5" d:Text="PLAYLIST NAME"/>
                                    <TextBlock Grid.Row="2" Text="{Binding Playlist.DisplayToolTip}" VerticalAlignment="Top" Margin="3.5" d:Text="173 трека, 11 ч. 28 мин."/>
                                </Grid>
                            </Grid>
                            <!--CONTROLS-->
                            <Grid Margin="32,0,0,8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Content="{iconPacks:Material Kind=Play}" Margin="0,5,5,5"
                                    Command="{Binding PlayCommand}"
                                    Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                    Background="{DynamicResource MahApps.Brushes.AccentBase}"
                                    Style="{DynamicResource RoundButton}" Width="34" Height="34"/>
                                <Button Grid.Column="1" Content="{iconPacks:Material Kind=More}" Margin="5"
                                    Style="{DynamicResource ContentOnlyButton}"
                                    Command="{Binding EditDetailsCommand}"/>
                            </Grid>
                            <!--CONTENT-->
                            <Grid Margin="32,8,0,0">
                                <ListView 
                                    MinHeight="128"
                                    Name="playlistSongsListView"
                                    gong:DragDrop.IsDragSource="True"
                                    gong:DragDrop.IsDropTarget="True"
                                    gong:DragDrop.DropHandler="{Binding DropHandler}"
                                    MouseDoubleClick="ListViewItem_MouseDoubleClick"
                                    Background="Transparent" Foreground="Transparent" ItemsSource="{Binding Songs}" AllowDrop="True" PreviewKeyDown="playlistSongsListView_PreviewKeyDown" PreviewMouseWheel="ListView_PreviewMouseWheel">
                                    <ListView.ItemTemplate>
                                        <DataTemplate DataType="{x:Type models:Song}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Image Width="40" Height="40" Margin="5" Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}}"/>
                                                <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="5" Text="{Binding Title}"/>
                                                <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="5" Text="{Binding Artist}"/>
                                                <TextBlock Grid.Column="3" VerticalAlignment="Center" Margin="5" Text="{Binding Album}"/>
                                                <TextBlock Grid.Column="4" VerticalAlignment="Center" Margin="5" Text="{Binding DisplayYear}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                    <Grid Name="playlistScrollViewerHeaderWhenScrolled" VerticalAlignment="Top" Background="{DynamicResource MahApps.Brushes.Gray10}">
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{DynamicResource RoundButton}"
                                    Background="{DynamicResource MahApps.Brushes.Accent}"
                                    Width="40" Height="40"
                                    Content="{iconPacks:Material Kind=Play}"
                                    Command="{Binding PlayCommand}"
                                    Margin="5"/>
                            <TextBlock Text="{Binding PlaylistInfo.Name}" FontSize="20" VerticalAlignment="Center" Margin="5"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Row="1" Name="musicPlayer" d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" MinWidth="180"/>
                <ColumnDefinition Width="4*" MaxWidth="722"/>
                <ColumnDefinition Width="3*" MinWidth="180"/>
            </Grid.ColumnDefinitions>
            <Grid HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/> <!--cover-->
                    <ColumnDefinition/> <!--name and artist-->
                </Grid.ColumnDefinitions>
                <Grid Margin="17,17,0,17" Grid.Column="0" Visibility="{Binding IsBigPicture, Converter={StaticResource invertedBoolToVisConverter}}">
                    <Image Width="75" Height="75" 
                       Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}}"/>
                    <Button
                        Margin="8"
                        HorizontalAlignment="Right" VerticalAlignment="Top" Style="{DynamicResource ContentOnlyButton}"
                            Command="{Binding ShowBigPictureCommand}"
                            Content="{iconPacks:Material Kind=ArrowUp}"/>
                </Grid>
                <Grid Grid.Column="1" Margin="17">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding CurrentSong.Title}" d:Text="His World" Margin="3.5" VerticalAlignment="Bottom" FontSize="14" FontWeight="Bold"/>
                    <TextBlock Grid.Row="1" Text="{Binding CurrentSong.Artist}" d:Text="Ali Tabatabaee Matty Lewis from Zebrahead" Margin="3.5" VerticalAlignment="Top" FontSize="11"/>
                </Grid>
            </Grid>
            <Grid HorizontalAlignment="Stretch" Margin="0,15,0,22" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Margin="3.5" Content="{iconPacks:Material Kind=Shuffle}" Style="{DynamicResource ContentOnlyButton}"
                            Command="{Binding ShuffleCommand}"/>
                    <Button Grid.Column="2" Margin="3.5" Content="{iconPacks:Material Kind=SkipPrevious}" Style="{DynamicResource ContentOnlyButton}"
                            Command="{Binding PrevTrackCommand}"/>
                    <Button Grid.Column="3" Margin="3.5" Content="{iconPacks:Material Kind=Play}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"/>
                    <Button Grid.Column="3" Margin="3.5" Content="{iconPacks:Material Kind=Pause}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource boolToVisConverter}}"/>
                    <Button Grid.Column="4" Margin="3.5" Content="{iconPacks:Material Kind=SkipNext}" Style="{DynamicResource ContentOnlyButton}"
                            Command="{Binding NextTrackCommand}"/>
                    <Button Grid.Column="5" Margin="3.5" Content="{iconPacks:Material Kind=Repeat}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopNoneVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                    <Button Grid.Column="5" Margin="3.5" Content="{iconPacks:Material Kind=RepeatOnce}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopCurrentVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                    <Button Grid.Column="5" Margin="3.5" Content="{iconPacks:Material Kind=Repeat}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopQueueVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="5" Text="{Binding DisplayPosition}" d:Text="00:00" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <Slider Grid.Column="1" Margin="3.5" MinWidth="212"
                            Minimum="0"
                            Value="{Binding Position}"
                            Maximum="{Binding Duration}"/>
                    <TextBlock Grid.Column="2" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" d:Text="59:59:59" Text="{Binding DisplayDuration}"/>
                </Grid>
            </Grid>
            <Grid HorizontalAlignment="Stretch" Margin="17" VerticalAlignment="Center" Grid.Column="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Name="queueViewButton"
                            Command="{Binding ViewQueueCommand}"
                            CommandParameter="{Binding ElementName=queuePopup}"
                            Margin="5" Content="{iconPacks:Material Kind=ViewList}" Style="{DynamicResource ContentOnlyButton}"/>
                    <Popup Name="queuePopup" MaxHeight="240" Width="300" PlacementTarget="{Binding ElementName=queueViewButton}" Placement="Top">
                        <GroupBox Header="Song Queue">
                            <ListView ItemsSource="{Binding SongQueue}" 
                                      gong:DragDrop.IsDropTarget="True"
                                      gong:DragDrop.IsDragSource="True">
                                <ListView.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:Song}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Image Width="20" Height="20" Margin="5" Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}}"/>
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="5" Text="{Binding Artist}"/>
                                            <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="5" Text="{Binding Title}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </GroupBox>
                    </Popup>
                    <iconPacks:PackIconMaterial Kind="VolumeSource" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Margin="5" Grid.Column="1"/>
                    <Slider Grid.Column="2" Minimum="0" Maximum="100" TickFrequency="1" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0" IsSnapToTickEnabled="True"
                        Value="{Binding Volume}"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
    <mah:MetroWindow.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="{Binding View.MusicPlayerViewModel.Position01}"
                         ProgressState="{Binding View.MusicPlayerViewModel.ProgressState}"
                         Overlay="{Binding View.MusicPlayerViewModel.CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PrevTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipPrevious, Brush=White}"
                                 Description="Previous Track"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Pause, Brush=White}"
                                 Description="Pause"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource boolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Play, Brush=White}"
                                 Description="Play"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.NextTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipNext, Brush=White}"
                                 Description="Next Track"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </mah:MetroWindow.TaskbarItemInfo>
    <mah:MetroWindow.Resources>
        <Style x:Key="ContentOnlyButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="Transparent">
                            <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Opacity" TargetName="content" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="content" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Name="grid" RenderTransformOrigin="0.5,0.5">
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="grid" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="grid" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </mah:MetroWindow.Resources>
</mah:MetroWindow>
