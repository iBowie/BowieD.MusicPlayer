<mah:MetroWindow  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="BowieD.MusicPlayer.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
                  xmlns:tb="http://www.hardcodet.net/taskbar"
                  xmlns:gong="urn:gong-wpf-dragdrop"
                  xmlns:extensions="clr-namespace:BowieD.MusicPlayer.WPF.Extensions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:models="clr-namespace:BowieD.MusicPlayer.WPF.Models"
        xmlns:local="clr-namespace:BowieD.MusicPlayer.WPF.Views" xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:viewmodels="clr-namespace:BowieD.MusicPlayer.WPF.ViewModels" xmlns:visualizators="clr-namespace:BowieD.MusicPlayer.WPF.ViewModels.Visualizators" xmlns:controls="clr-namespace:BowieD.MusicPlayer.WPF.Controls"
                  mc:Ignorable="d"
                  d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
                  Title="{Binding WindowTitle}"
                  MinHeight="600" MinWidth="800"
                  d:Title="BDMP - BowieD's Music Player" Height="720" Width="1280" d:Height="1440" d:Width="2560" d:Background="{DynamicResource MahApps.Brushes.Window.Background}">
    <mah:MetroWindow.InputBindings>
        <KeyBinding Command="{Binding View.MusicPlayerViewModel.ExitFullScreenCommand}" Key="Esc"/>
        <KeyBinding Command="{Binding View.MusicPlayerViewModel.EnterFullScreenCommand}" Key="F11"/>
    </mah:MetroWindow.InputBindings>
    <Grid Name="mainGrid">
        <Grid Name="normalViewGrid" d:HorizontalAlignment="Left" d:Width="1280" d:Height="720" d:VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Menu Visibility="Collapsed">
                    <MenuItem Header="File">
                        <MenuItem Header="Add song" Command="{Binding AddSongCommand}" />
                    </MenuItem>
                </Menu>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="128" MaxWidth="392" />
                        <ColumnDefinition Width="2" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <Button Margin="5" Command="{Binding OpenAllSongsCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Music" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="All songs" Margin="5" />
                                    </Grid>
                                </Button>
                                <Button Margin="5" Command="{Binding OpenLibraryCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Bookshelf" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="My library" Margin="5" />
                                    </Grid>
                                </Button>
                                <Button Margin="5" Command="{Binding OpenSettingsCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Cog" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="Settings" Margin="5" />
                                    </Grid>
                                </Button>
                                <Separator />
                                <Button Margin="5" Command="{Binding CreatePlaylistCommand}"
                                        HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Style="{DynamicResource ContentOnlyButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <iconPacks:PackIconMaterial Kind="Plus" Margin="5" />
                                        <TextBlock Grid.Column="1" Text="Create Playlist" Margin="5" />
                                    </Grid>
                                </Button>
                            </StackPanel>
                            <ListView Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Playlists}"
                                      SelectedItem="{Binding SelectedPlaylist, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ListView.ItemTemplate>
                                    <DataTemplate DataType="{x:Type models:PlaylistInfo}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Image Width="20" Height="20" Margin="5" Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=20|0}" />
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Name}"
                                                           TextTrimming="CharacterEllipsis" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Grid>
                        <Grid Grid.Row="1" HorizontalAlignment="Stretch"
                              Name="imgBigPicture"
                              Margin="0,0,0,0"
                              VerticalAlignment="Bottom"
                              d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}"
                              DataContext="{Binding DataContext, ElementName=musicPlayer}"
                              d:Visibility="Visible"
                              Visibility="{Binding IsBigPicture, Converter={StaticResource boolToVisConverter}}"
                              xf:Animations.Primary="{xf:Animate BasedOn={StaticResource SlideFromBottom}, Event=None}"
                              xf:Animations.PrimaryBinding="{Binding IsBigPicture}">
                            <Grid.BitmapEffect>
                                <DropShadowBitmapEffect Color="Black"
                                                        Opacity="0.5"
                                                        Direction="90"
                                                        Softness="1"
                                                        ShadowDepth="1" />
                            </Grid.BitmapEffect>
                            <Image d:Source="/Resources/Images/missing_texture.jpg"
                                   Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=392|0}" />
                            <Button
                                Margin="16"
                                Background="{DynamicResource MahApps.Brushes.Window.Background}"
                                Padding="5"
                                Opacity="0.75"
                                HorizontalAlignment="Right" VerticalAlignment="Top"
                                Style="{DynamicResource RoundButton}"
                                Content="{iconPacks:Material Kind=ArrowDown}"
                                Visibility="{Binding IsMouseOver, ElementName=imgBigPicture, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding CollapseBigPictureCommand}" />
                        </Grid>
                    </Grid>
                    <GridSplitter Grid.Column="1" ShowsPreview="False" />
                    <Frame Grid.Column="2" Name="navFrame" NavigationUIVisibility="Hidden"
                           Source="Pages/EmptyPage.xaml" JournalOwnership="OwnsJournal" />
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Name="musicPlayer" d:DataContext="{d:DesignInstance Type=viewmodels:MusicPlayerViewModel}"
                  Background="{DynamicResource MahApps.Brushes.Gray10}">
                <Grid.BitmapEffect>
                    <DropShadowBitmapEffect Color="Black"
                                            Opacity="0.5"
                                            Direction="90"
                                            Softness="1"
                                            ShadowDepth="1" />
                </Grid.BitmapEffect>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" MinWidth="180" />
                    <ColumnDefinition Width="4*" MaxWidth="722" />
                    <ColumnDefinition Width="3*" MinWidth="180" />
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <!--cover-->
                        <ColumnDefinition />
                        <!--name and artist-->
                    </Grid.ColumnDefinitions>
                    <Grid Margin="17,17,0,17" Grid.Column="0" Name="imgSmallPicture"
                          d:Visibility="Visible"
                          Visibility="{Binding IsBigPicture, Converter={StaticResource invertedBoolToVisConverter}}"
                          xf:Animations.Primary="{xf:Animate BasedOn={StaticResource SlideFromLeft}, Event=None}"
                          xf:Animations.PrimaryBinding="{Binding IsBigPicture, Converter={StaticResource InverseBoolConverter}}">
                        <Image Width="75" Height="75"
                               d:Source="/Resources/Images/missing_texture.jpg"
                               Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=75|0}" />
                        <Button
                            Margin="8"
                            Background="{DynamicResource MahApps.Brushes.Window.Background}"
                            Padding="2.5"
                            Opacity="0.75"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top" Style="{DynamicResource RoundButton}"
                            Command="{Binding ShowBigPictureCommand}"
                            Content="{iconPacks:Material Kind=ArrowUp}"
                            Visibility="{Binding IsMouseOver, ElementName=imgSmallPicture, Converter={StaticResource boolToVisConverter}}" />
                    </Grid>
                    <Grid Grid.Column="1" Margin="17">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding CurrentSong.Title}" d:Text="His World" Margin="3.5" VerticalAlignment="Bottom" FontSize="14" FontWeight="Bold" />
                        <TextBlock Grid.Row="1" Text="{Binding CurrentSong.Artist}" d:Text="Ali Tabatabaee Matty Lewis from Zebrahead" Margin="3.5" VerticalAlignment="Top" FontSize="11" />
                    </Grid>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="0,15,0,22" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Margin="10,3.5" Content="{iconPacks:Material Kind=Shuffle}" Style="{DynamicResource ContentOnlyButton}" Foreground="{DynamicResource MahApps.Brushes.AccentBase}"
                                Command="{Binding ShuffleCommand}" Visibility="{Binding IsShuffleEnabled, Converter={StaticResource boolToVisConverter}}" />
                        <Button Grid.Column="1" Margin="10,3.5" Content="{iconPacks:Material Kind=Shuffle}" Style="{DynamicResource ContentOnlyButton}"
                                Command="{Binding ShuffleCommand}" Visibility="{Binding IsShuffleEnabled, Converter={StaticResource invertedBoolToVisConverter}}" />
                        <Button Grid.Column="2" Margin="10,3.5" Content="{iconPacks:Material Kind=SkipPrevious}" Style="{DynamicResource ContentOnlyButton}"
                                Command="{Binding PrevTrackCommand}" />
                        <Button Grid.Column="3" Margin="10,3.5" Content="{iconPacks:Material Kind=Play}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                                Command="{Binding PlayPauseCommand}"
                                Visibility="{Binding IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}" />
                        <Button Grid.Column="3" Margin="10,3.5" Content="{iconPacks:Material Kind=Pause}" Width="34" Height="34" Style="{DynamicResource RoundButton}" Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                                Command="{Binding PlayPauseCommand}"
                                Visibility="{Binding IsPauseButton, Converter={StaticResource boolToVisConverter}}" />
                        <Button Grid.Column="4" Margin="10,3.5" Content="{iconPacks:Material Kind=SkipNext}" Style="{DynamicResource ContentOnlyButton}"
                                Command="{Binding NextTrackCommand}" />
                        <Button Grid.Column="5" Margin="10,3.5" Content="{iconPacks:Material Kind=Repeat}" Style="{DynamicResource ContentOnlyButton}"
                                Visibility="{Binding LoopNoneVisible, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding LoopCommand}" />
                        <Button Grid.Column="5" Margin="10,3.5" Content="{iconPacks:Material Kind=RepeatOnce}" Foreground="{DynamicResource MahApps.Brushes.AccentBase}" Style="{DynamicResource ContentOnlyButton}"
                                Visibility="{Binding LoopCurrentVisible, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding LoopCommand}" />
                        <Button Grid.Column="5" Margin="10,3.5" Content="{iconPacks:Material Kind=Repeat}" Foreground="{DynamicResource MahApps.Brushes.AccentBase}" Style="{DynamicResource ContentOnlyButton}"
                                Visibility="{Binding LoopQueueVisible, Converter={StaticResource boolToVisConverter}}"
                                Command="{Binding LoopCommand}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Margin="5" Text="{Binding BassWrapper.Position, Converter={StaticResource doubleToDisplayTimeConverter}}" d:Text="00:00" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <Slider Grid.Column="1" Margin="3.5" MinWidth="212"
                                Minimum="0"
                                Value="{Binding BassWrapper.Position}"
                                Maximum="{Binding BassWrapper.Duration}" />
                        <TextBlock Grid.Column="2" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Center" d:Text="59:59:59" Text="{Binding BassWrapper.Duration, Converter={StaticResource doubleToDisplayTimeConverter}}" />
                    </Grid>
                </Grid>
                <Grid HorizontalAlignment="Stretch" Margin="17" VerticalAlignment="Center" Grid.Column="2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button Name="queueViewButton"
                                Command="{Binding ViewQueueCommand}"
                                Margin="5" Content="{iconPacks:Material Kind=ViewList}" Style="{DynamicResource ContentOnlyButton}" />
                        <iconPacks:PackIconMaterial Kind="VolumeSource" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Margin="5" Grid.Column="1" />
                        <Slider Grid.Column="2" Minimum="0" Maximum="1" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0"
                                Value="{Binding BassWrapper.UserVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" d:Value="0.5" />
                        <Button Command="{Binding EnterFullScreenCommand}"
                                Content="{iconPacks:Material Kind=Fullscreen}"
                                Margin="5"
                                Grid.Column="3"
                                Style="{DynamicResource ContentOnlyButton}" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
        <Grid Name="fullScreenViewGrid" d:HorizontalAlignment="Left" d:Width="1280" d:Height="720" d:VerticalAlignment="Top" d:Visibility="Visible" Visibility="Collapsed">
            <d:Grid.RenderTransform>
                <TranslateTransform X="1280" />
            </d:Grid.RenderTransform>
            <!-- visualizers -->
            <Grid Background="Transparent" AllowDrop="False">
                <!-- default visualizer -->
                <Grid Background="Transparent" AllowDrop="True" Drop="fullScreenViewGrid_Drop" x:Name="visualizerGrid_default" d:DataContext="{d:DesignInstance Type=visualizators:DefaultBackgroundVisualizerViewModel}">
                    <!--background-->
                    <Image Name="fullScreenBackground" Stretch="UniformToFill">
                        <Image.BitmapEffect>
                            <BlurBitmapEffect Radius="{Binding BlurPower}" KernelType="Gaussian" />
                        </Image.BitmapEffect>
                    </Image>
                    <Image Name="fullScreenBackground2" Opacity="0" Stretch="UniformToFill">
                        <Image.BitmapEffect>
                            <BlurBitmapEffect Radius="{Binding BlurPower}" KernelType="Gaussian" />
                        </Image.BitmapEffect>
                    </Image>

                    <Grid Grid.Row="2" Margin="30,30,30,196" VerticalAlignment="Bottom" DataContext="{Binding MainWindowViewModel.View.MusicPlayerViewModel}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image Margin="10" d:Width="176" d:Height="176" MaxWidth="176" MaxHeight="176"
                                   d:Source="/Resources/Images/missing_texture.jpg"
                                   Source="{Binding CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=176|0}"/>
                            <Grid Margin="10" Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="{Binding CurrentSong.Title}" TextWrapping="Wrap" VerticalAlignment="Bottom" d:Text="Your Contract Has Expired" FontSize="48" FontWeight="Bold"/>
                                <TextBlock Grid.Row="1" VerticalAlignment="Top" Text="{Binding CurrentSong.Artist}" d:Text="Pascal Michael Stiefel" FontSize="24"/>
                            </Grid>

                            <Grid.BitmapEffect>
                                <DropShadowBitmapEffect Color="Black" ShadowDepth="5" Softness="0.75"/>
                            </Grid.BitmapEffect>
                        </Grid>
                    </Grid>

                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Select background..."
                                      Command="{Binding SelectFullscreenBackgroundCommand}" />
                            <MenuItem Header="Set song background..."
                                      Command="{Binding SetSongBackgroundImageCommand}" />
                            <Separator />
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Text="Blur Power" IsEnabled="False" />
                                <Slider Grid.Row="1" Minimum="0" Maximum="50" TickFrequency="1"
                                        AutoToolTipPlacement="BottomRight"
                                        AutoToolTipPrecision="0"
                                        IsSnapToTickEnabled="True" Value="{Binding BlurPower}" />
                            </Grid>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Text="Switch Background Speed" IsEnabled="False" />
                                <Slider Grid.Row="1" Minimum="5" Maximum="120" TickFrequency="1"
                                        AutoToolTipPlacement="BottomRight"
                                        AutoToolTipPrecision="0"
                                        IsSnapToTickEnabled="True" Value="{Binding BackgroundSwitchSpeedSeconds}" />
                            </Grid>
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
                <!-- monstercat style visualizer -->
                <Grid x:Name="visualizerGrid_monsterCat" Background="#0C0C0C" d:DataContext="{d:DesignInstance visualizators:MonsterCatVisualizerViewModel}">
                    <d:Grid.RenderTransform>
                        <TranslateTransform Y="720" />
                    </d:Grid.RenderTransform>
                    
                    <controls:ParticlesControl x:Name="monsterCat_particles" MaxParticles="{Binding MaxParticles}" ParticleSpeedRatio="{Binding SpeedRatio}" ParticleSpeed="2.0"/>

                    <Grid x:Name="monsterCat_center" Margin="116,116,116,196">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <UniformGrid Rows="1" x:Name="monsterCat_peaksGrid" Margin="-5" SnapsToDevicePixels="False">
                            <Rectangle/>
                            <Rectangle/>
                            <Rectangle/>

                            <UniformGrid.Resources>
                                <Style x:Key="{x:Type Rectangle}" TargetType="{x:Type Rectangle}">
                                    <!--<Setter Property="Fill" Value="#F51B00"/>-->
                                    <d:Setter Property="Fill" Value="#FFFFFF"/>
                                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                                    <Setter Property="MinHeight" Value="8"/>
                                    <Setter Property="Margin" Value="5"/>
                                    <Setter Property="MaxHeight" Value="{Binding ActualHeight, ElementName=monsterCat_peaksGrid}"/>
                                </Style>
                            </UniformGrid.Resources>
                        </UniformGrid>
                        <Grid Grid.Row="1" Margin="0,32,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Margin="0,0,24,0" Source="{Binding MainWindowViewModel.View.MusicPlayerViewModel.CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}}"
                                   d:Source="/Resources/Images/missing_texture.jpg"/>
                            <Viewbox Grid.Column="1" HorizontalAlignment="Left">
                                <Grid VerticalAlignment="Center">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock d:Text="TRISTAM &amp; BRAKEN" Foreground="White" FontSize="54"
                                           Text="{Binding MainWindowViewModel.View.MusicPlayerViewModel.CurrentSong.Artist, Converter={StaticResource stringToUpperConverter}}"
                                           TextWrapping="Wrap"
                                           FontFamily="pack://application:,,,/Resources/Fonts/#Gotham Bold"/>
                                    <TextBlock d:Text="FRAME OF MIND" Foreground="White" FontSize="24" 
                                           Text="{Binding MainWindowViewModel.View.MusicPlayerViewModel.CurrentSong.Title, Converter={StaticResource stringToUpperConverter}}"
                                           FontFamily="pack://application:,,,/Resources/Fonts/#Gotham Book"
                                           Grid.Row="1" TextWrapping="Wrap"/>
                                </Grid>
                            </Viewbox>
                        </Grid>
                    </Grid>

                    <Grid.ContextMenu>
                        <ContextMenu>
                            <TextBlock Text="FPS"/>
                            <Slider AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0" Width="144" Minimum="1" IsSnapToTickEnabled="True" 
                                    Ticks="1, 15, 24, 30, 50, 60, 72, 90, 120, 144" TickPlacement="BottomRight" Maximum="144" 
                                    Value="{Binding FrameRate}"/>
                            <Separator/>
                            <TextBlock Text="Color"/>
                            <CheckBox IsChecked="{Binding AutoPickColor}" Content="Pick color from cover"/>
                            <mah:ColorPicker SelectedColor="{Binding AccentColor}" Visibility="{Binding AutoPickColor, Converter={StaticResource invertedBoolToVisConverter}}"/>
                            <TextBlock Text="Max Particles"/>
                            <Slider AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0" Width="144" Minimum="0"
                                    Ticks="0, 8, 16, 24, 32, 64, 128, 256" TickPlacement="BottomRight" IsSnapToTickEnabled="True" Maximum="256"
                                    Value="{Binding MaxParticles}"/>
                            <TextBlock Text="Bar Count"/>
                            <Slider AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0"
                                    TickFrequency="1" IsSnapToTickEnabled="True" Minimum="0" Maximum="256"
                                    Value="{Binding BarCount}"/>
                            <TextBlock Text="Smooth Factor"/>
                            <Slider AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="1"
                                    Minimum="0" Maximum="20" Value="{Binding SmoothFactor}"/>
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
            </Grid>
            <Grid>
                <!--controls-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <!--maybe something more-->
                    <RowDefinition/>
                    <!--blank-->
                    <RowDefinition Height="Auto"/>
                    <!--media info-->
                    <RowDefinition Height="Auto"/>
                    <!--slider and media control-->
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="{DynamicResource MahApps.Brushes.Border.NonActive}" BorderThickness="1" 
                            Grid.Column="1" HorizontalAlignment="Right" Margin="30" 
                            MaxWidth="512"
                            Visibility="{Binding View.MusicPlayerViewModel.IsUpcomingSongVisible, Converter={StaticResource boolToVisConverter}}"
                            Background="{DynamicResource MahApps.Brushes.Flyout.Background}"
                            xf:Animations.Primary="{xf:Animate BasedOn={StaticResource SlideFromRight}, Event=Visibility}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid d:DataContext="{d:DesignInstance Type=models:Song}" DataContext="{Binding View.MusicPlayerViewModel.UpcomingSong}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Margin="5" 
                                       d:Source="/Resources/Images/missing_texture.jpg"
                                       Source="{Binding PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=0|96}"/>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Up Next" Margin="10" FontSize="20" VerticalAlignment="Bottom"/>
                                    <TextBlock Grid.Row="1" Margin="10" VerticalAlignment="Top" TextTrimming="CharacterEllipsis" FontSize="24" FontWeight="Bold"><Run Text="{Binding Title, Mode=OneWay}" d:Text="Title"/> - <Run Text="{Binding Artist, Mode=OneWay}" d:Text="Artist"/></TextBlock>
                                </Grid>
                            </Grid>
                            <ProgressBar Grid.Row="1" Value="{Binding View.MusicPlayerViewModel.UpcomingSongSlider, Mode=OneWay}" Minimum="0" Maximum="1"
                                         d:Value="0.5"/>
                        </Grid>
                    </Border>
                </Grid>
                <Grid Grid.Row="3" Name="fullScreenMediaControlGrid"
                      Background="Transparent"
                      d:Opacity="1"
                      Opacity="{Binding IsMouseOver, ElementName=fullScreenMediaControlGrid, Converter={StaticResource boolToVisHiddenConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="30,30,30,15" DataContext="{Binding View.MusicPlayerViewModel}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="20*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" d:Text="00:00" Text="{Binding BassWrapper.Position, Converter={StaticResource doubleToDisplayTimeConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Slider Grid.Column="1" Value="{Binding BassWrapper.Position}" Maximum="{Binding BassWrapper.Duration}"/>
                        <TextBlock Grid.Column="2" d:Text="59:59:59" Text="{Binding BassWrapper.Duration, Converter={StaticResource doubleToDisplayTimeConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Grid Grid.Row="1" Margin="30,0,30,30" DataContext="{Binding View.MusicPlayerViewModel}">
                        <Grid HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Content="{iconPacks:Material Kind=Shuffle}" 
                            Margin="10" Width="30" Height="30" Visibility="{Binding IsShuffleEnabled, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding ShuffleCommand}" Foreground="{DynamicResource MahApps.Brushes.Accent}"
                            Style="{DynamicResource ContentOnlyButton}"/>
                            <Button Grid.Column="0" Content="{iconPacks:Material Kind=Shuffle}" 
                            Margin="10" Width="30" Height="30" Visibility="{Binding IsShuffleEnabled, Converter={StaticResource invertedBoolToVisConverter}}"
                            Command="{Binding ShuffleCommand}"
                            Style="{DynamicResource ContentOnlyButton}"/>
                            <Button Grid.Column="1" Content="{iconPacks:Material Kind=SkipPrevious}" 
                            Margin="10" Width="30" Height="30" 
                            Command="{Binding PrevTrackCommand}"
                            Style="{DynamicResource ContentOnlyButton}"/>
                            <Button Grid.Column="2" Content="{iconPacks:Material Kind=Play}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"
                            Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                            Margin="5" Width="48" Height="48" 
                            Style="{DynamicResource RoundButton}"/>
                            <Button Grid.Column="2" Content="{iconPacks:Material Kind=Pause}" 
                            Command="{Binding PlayPauseCommand}"
                            Visibility="{Binding IsPauseButton, Converter={StaticResource boolToVisConverter}}"
                            Foreground="{DynamicResource MahApps.Brushes.Window.Background}"
                            Margin="5" Width="48" Height="48" 
                            Style="{DynamicResource RoundButton}"/>
                            <Button Grid.Column="3" Content="{iconPacks:Material Kind=SkipNext}" 
                            Margin="10" Width="30" Height="30" 
                            Command="{Binding NextTrackCommand}"
                            Style="{DynamicResource ContentOnlyButton}"/>
                            <Button Grid.Column="4" Margin="10" Content="{iconPacks:Material Kind=Repeat}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopNoneVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                            <Button Grid.Column="4" Margin="10" Content="{iconPacks:Material Kind=RepeatOnce}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopCurrentVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                            <Button Grid.Column="4" Margin="10" Content="{iconPacks:Material Kind=Repeat}" Foreground="{DynamicResource MahApps.Brushes.Accent}" Style="{DynamicResource ContentOnlyButton}"
                            Visibility="{Binding LoopQueueVisible, Converter={StaticResource boolToVisConverter}}"
                            Command="{Binding LoopCommand}"/>
                        </Grid>
                        <Grid HorizontalAlignment="Right">
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="VolumeSource" Margin="10" VerticalAlignment="Center" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                                <Slider Value="{Binding BassWrapper.UserVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Maximum="1" Width="128" Margin="10" d:Value="0.5" AutoToolTipPlacement="BottomRight" AutoToolTipPrecision="0"/>
                                <Button Command="{Binding ExitFullScreenCommand}"
                                Content="{iconPacks:Material Kind=FullscreenExit}"
                                Style="{DynamicResource ContentOnlyButton}" Margin="10"/>
                            </StackPanel>
                        </Grid>
                        <Grid HorizontalAlignment="Left">
                            <ComboBox Margin="10" ItemsSource="{Binding View.ViewModel.Visualizers}" SelectedIndex="0" SelectionChanged="VisualizerComboBox_SelectionChanged" x:Name="visualizerComboBox"
                                      DisplayMemberPath="VisualizerName" VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <tb:TaskbarIcon ToolTipText="{Binding WindowTitle}" Visibility="Visible" DoubleClickCommand="{Binding ShowWindowCommand}"
                        PopupActivation="RightClick" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                        IconSource="/Resources/Images/missing_texture.ico">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show" Command="{Binding ShowWindowCommand}"/>
                    <MenuItem Header="Hide" Command="{Binding HideWindowCommand}"/>
                    <Separator/>
                    <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
    <mah:MetroWindow.TaskbarItemInfo>
        <TaskbarItemInfo ProgressValue="{Binding View.MusicPlayerViewModel.Position01}"
                         ProgressState="{Binding View.MusicPlayerViewModel.ProgressState}"
                         Overlay="{Binding View.MusicPlayerViewModel.CurrentSong.PictureData, Converter={StaticResource binaryToPictureConverter}, ConverterParameter=16|0}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PrevTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipPrevious, Brush=White}"
                                 Description="Previous"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Pause, Brush=White}"
                                 Description="Pause"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource boolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.PlayPauseCommand}" 
                                 ImageSource="{iconPacks:MaterialImage Kind=Play, Brush=White}"
                                 Description="Play"
                                 Visibility="{Binding View.MusicPlayerViewModel.IsPauseButton, Converter={StaticResource invertedBoolToVisConverter}}"/>
                <ThumbButtonInfo Command="{Binding View.MusicPlayerViewModel.NextTrackCommand}"
                                 ImageSource="{iconPacks:MaterialImage Kind=SkipNext, Brush=White}"
                                 Description="Next"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </mah:MetroWindow.TaskbarItemInfo>
</mah:MetroWindow>
